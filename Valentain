int miglior_priorita(double cache[], int nVideo, FILE *fin, int lungFile, int video[], int dimC,
                     int gVideo[]) {//restituisce il numero di video massimo
    
    int i, j, indice, contaVideo=0, tempVideo[nVideo], contaVideo_temp, sommaDim;
    double pMax=-1, pTemp;
    
    for (i = 0; i < lungFile; ) {        
        contaVideo_temp = 0;//inizializzo il ocntaotre di video e la somma a 0
        sommaDim = 0;
        pTemp=0;
        for (j = 0; j < nVideo; j++) {
            fscanf(fin, "%d", &indice);
            if (cache[indice] != 0) {
                if(sommaDim + gVideo[indice]<= dimC) {
                    sommaDim += gVideo[indice];
                    tempVideo[contaVideo_temp++] = indice;
                    pTemp += cache[indice];
                }else{
                    j=nVideo;
                }
            }
            if(pTemp>pMax){
                pMax=pTemp;
                contaVideo=contaVideo_temp;
                int k;
                for(k=0;k<contaVideo_temp;k++){
                    video[k]=tempVideo[k];
                }
            }        
        }
        i++;
    }
    return contaVideo;
}
