#include <stdio.h>
#include <stdlib.h>

int videos, endpoints, requests, caches, dimension;

void main(int argc, char *argv[]) {
    printf("Hello, World!\n");


    if(argc != 2){
        printf("Wrong number of arguments\n");
        exit(0);
    }

    FILE *input = fopen(argv[1], "r");
    //FILE *ciao = fopen("ciao.dat", "w");
    
    if(input == NULL){
        printf("Failed opening file\n");
        exit(0);
    }

    fscanf(input, "%d %d %d %d %d", &videos, &endpoints, &requests, &caches, &dimension);

    int *sizes = (*int)malloc(videos*sizeof(int));
    int *latency = (*int)malloc(endpoints*sizeof(int));
    //numero di endpoint come indirizzo, latenza verso il datacenter come valore
    int latency_to_cache[endpoints][caches]; //primo indirizzo indica l'endpoint, secondo il numero della cache,
                                        // valore la latenza in millisecondi.
                                        
                                            int **latency_to_cache = (int**)malloc(endpoints*sizeof(int)); //primo indirizzo endpoint, secondo indirizzo video,
    for(i=0; i<endpoints; i++)
    {
        request_videos[i]=(int*)malloc(caches*sizeof(int));

    }
    
    int *number_of_caches = (*int)malloc(endpoints*sizeof(int));

    int **request_videos = (int**)malloc(endpoints*sizeof(int)); //primo indirizzo endpoint, secondo indirizzo video,
    for(i=0; i<endpoints; i++)
    {
        request_videos[i]=(int*)malloc(videos*sizeof(int));

    }

    for (i = 0; i < videos; ++i) {
        fscanf(input, "%d", &sizes[i]);
    }

    int temp_caches; //numero delle cache per ogni endpoint
    int temp_caches1; //numero esatto della cache
int j;
    for (j = 0; j < endpoints; ++j) {
        fscanf(input, "%d %d", &latency[j], &temp_caches);
        number_of_caches[j] = temp_caches;
        for (i = 0; i < temp_caches; ++i) {
            fscanf(input, "%d %d", &temp_caches1, &latency_to_cache[j][temp_caches1]);
        }
    }

    int temp1, temp2;
int k;
    for (k = 0; k < endpoints; ++k) {
        for (i = 0; i < videos; ++i) {
            fscanf(input, "%d %d %d", &temp1, &temp2, &request_videos[temp2][temp1]);
        }
    }



    fclose(input);
    
}
